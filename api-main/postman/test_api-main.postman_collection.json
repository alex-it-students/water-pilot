{
	"info": {
		"_postman_id": "88a80ef3-6eb1-4226-9add-a9a6e2d8aa03",
		"name": "test_api-main",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25416005"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "sign-up",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Statut de réponse est 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Message de réussite est correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql('Votre compte a bien été créé !');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "password",
									"value": "Azerty123*",
									"type": "text"
								},
								{
									"key": "name",
									"value": "test",
									"type": "text"
								},
								{
									"key": "email",
									"value": "test@gmail.fr",
									"type": "text"
								},
								{
									"key": "city",
									"value": "Test",
									"type": "text"
								},
								{
									"key": "longitude",
									"value": "40.55647657",
									"type": "text"
								},
								{
									"key": "latitude",
									"value": "5.24567",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:3000/user/sign-up",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user",
								"sign-up"
							]
						}
					},
					"response": []
				},
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Statut de réponse est 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Un token est retourné\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('token');\r",
									"});\r",
									"pm.test(\"Un token est retourné et stocké dans les variables d'environnement\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('token');\r",
									"\r",
									"    // Stocker le token dans une variable d'environnement\r",
									"    pm.environment.set(\"token\", jsonData.token);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "password",
									"value": "Azerty123*",
									"type": "text"
								},
								{
									"key": "email",
									"value": "test@gmail.fr",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:3000/user/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "get users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Statut de réponse est 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Réponse est un array\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.an('array');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {},
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "jwt",
							"jwt": [
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "algorithm",
									"value": "HS256",
									"type": "string"
								},
								{
									"key": "isSecretBase64Encoded",
									"value": false,
									"type": "boolean"
								},
								{
									"key": "payload",
									"value": "{}",
									"type": "string"
								},
								{
									"key": "headerPrefix",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "queryParamKey",
									"value": "token",
									"type": "string"
								},
								{
									"key": "header",
									"value": "{}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "http://localhost:3000/user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch garden location",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Patch Garden Location\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(jsonData.message).to.eql('La localisation de votre jardin a bien été enregistré !');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "longitude",
									"value": "77.77",
									"type": "text"
								},
								{
									"key": "latitude",
									"value": "7.777",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:3000/user/gardenLocation",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user",
								"gardenLocation"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "electrovalve",
			"item": [
				{
					"name": "add valve",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has correct format\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.keys('id', 'name', 'position', 'userId');\r",
									"    pm.expect(jsonData.name).to.eql('loan');\r",
									"    pm.expect(jsonData.position).to.eql(1);\r",
									"    // replace 21 with your userId\r",
									"});\r",
									"\r",
									"pm.test(\"id is stored in the environment\", function() {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.environment.set(\"valveId\", jsonData.id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "pinPosition",
									"value": "1",
									"type": "text"
								},
								{
									"key": "name",
									"value": "loan",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:3000/electrovalve",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"electrovalve"
							]
						}
					},
					"response": []
				},
				{
					"name": "get valve",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body is an array\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.an('array');\r",
									"});\r",
									"\r",
									"pm.test(\"First item in the array is an object with property 'id'\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData[0]).to.be.a('object');\r",
									"    pm.expect(jsonData[0]).to.have.property('id');\r",
									"});\r",
									"\r",
									"pm.test(\"Store and display the id of the first electrovalve\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var firstElectrovalveId = jsonData[0].id;\r",
									"\r",
									"    // Store the id in an environment variable\r",
									"    pm.environment.set('valveId', firstElectrovalveId);\r",
									"\r",
									"    // Display the id in the test result\r",
									"    pm.expect(firstElectrovalveId).to.eql(pm.environment.get('valveId'));\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "http://localhost:3000/electrovalve",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"electrovalve"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch valve",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Update Electrovalve\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(jsonData).to.be.a('object');\r",
									"    pm.expect(jsonData).to.have.property('msg');\r",
									"    pm.expect(jsonData.msg).to.eql('modification effectuée');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "melon",
									"type": "text"
								},
								{
									"key": "isAutomatic",
									"value": "0",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:3000/electrovalve/{{valveId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"electrovalve",
								"{{valveId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "valveSetting",
			"item": [
				{
					"name": "add settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "rainThreshold",
									"value": "5",
									"type": "text"
								},
								{
									"key": "moistureThreshold",
									"value": "55",
									"type": "text"
								},
								{
									"key": "duration",
									"value": "55",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:3000/electrovalve/{{valveId}}/valveSettings",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"electrovalve",
								"{{valveId}}",
								"valveSettings"
							]
						}
					},
					"response": []
				},
				{
					"name": "put settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "rainThreshold",
									"value": "7",
									"type": "text"
								},
								{
									"key": "moistureThreshold",
									"value": "27",
									"type": "text"
								},
								{
									"key": "duration",
									"value": "77",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:3000/electrovalve/{{valveId}}/valveSettings",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"electrovalve",
								"{{valveId}}",
								"valveSettings"
							]
						}
					},
					"response": []
				},
				{
					"name": "get setting",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has correct format\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData[0]).to.have.keys('id', 'rainThreshold', 'moistureThreshold', 'duration', 'idElectrovalve');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:3000/electrovalve/{{valveId}}/valveSettings",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"electrovalve",
								"{{valveId}}",
								"valveSettings"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "schedule",
			"item": [
				{
					"name": "post schedule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "days",
									"value": "1,2,3",
									"type": "text"
								},
								{
									"key": "hourStart",
									"value": "5",
									"type": "text"
								},
								{
									"key": "hourEnd",
									"value": "9",
									"type": "text"
								},
								{
									"key": "isActivated",
									"value": "true",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:3000/electrovalve/{{valveId}}/valveSettings/schedule",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"electrovalve",
								"{{valveId}}",
								"valveSettings",
								"schedule"
							]
						}
					},
					"response": []
				},
				{
					"name": "put schedule",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "days",
									"value": "4,5,6",
									"type": "text"
								},
								{
									"key": "hourStart",
									"value": "3",
									"type": "text"
								},
								{
									"key": "hourEnd",
									"value": "6",
									"type": "text"
								},
								{
									"key": "isActivated",
									"value": "false",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:3000/electrovalve/{{valveId}}/valveSettings/schedule/{{idSchedule}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"electrovalve",
								"{{valveId}}",
								"valveSettings",
								"schedule",
								"{{idSchedule}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get schedules",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Response has correct format\", function () {\r",
									"    pm.expect(responseJson[0]).to.have.keys('id', 'hourStart', 'hourEnd', 'days', 'idSettings', 'isActivated');\r",
									"});\r",
									"\r",
									"if (responseJson.length > 0) {\r",
									"    pm.environment.set(\"idSchedule\", responseJson[0].id);\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:3000/electrovalve/{{valveId}}/valveSettings/schedule",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"electrovalve",
								"{{valveId}}",
								"valveSettings",
								"schedule"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete schedule",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:3000/electrovalve/{{valveId}}/valveSettings/schedule/{{idSchedule}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"electrovalve",
								"{{valveId}}",
								"valveSettings",
								"schedule",
								"{{idSchedule}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete setting",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:3000/electrovalve/{{valveId}}/valveSettings",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"electrovalve",
								"{{valveId}}",
								"valveSettings"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete valve",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:3000/electrovalve/{{valveId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"electrovalve",
								"{{valveId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Statut de réponse est 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Message de réussite est correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql('Utilisateur supprimé');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:3000/user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}